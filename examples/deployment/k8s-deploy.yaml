apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: cpe-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: benchmarkoperators.cpe.cogadvisor.io
spec:
  group: cpe.cogadvisor.io
  names:
    kind: BenchmarkOperator
    listKind: BenchmarkOperatorList
    plural: benchmarkoperators
    singular: benchmarkoperator
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BenchmarkOperator is the Schema for the benchmarkoperators API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BenchmarkOperatorSpec defines the desired state of BenchmarkOperator
            properties:
              adaptor:
                type: string
              apiVersion:
                type: string
              crd:
                properties:
                  host:
                    type: string
                  paths:
                    items:
                      type: string
                    type: array
                required:
                - host
                type: object
              deploySpec:
                properties:
                  helm:
                    properties:
                      entity:
                        type: string
                      password:
                        type: string
                      release:
                        type: string
                      repoName:
                        type: string
                      url:
                        type: string
                      user:
                        type: string
                      valuesYaml:
                        type: string
                    required:
                    - entity
                    - repoName
                    - url
                    type: object
                  namespace:
                    type: string
                  yaml:
                    properties:
                      host:
                        type: string
                      paths:
                        items:
                          type: string
                        type: array
                    required:
                    - host
                    type: object
                type: object
              kind:
                type: string
            required:
            - apiVersion
            - deploySpec
            - kind
            type: object
          status:
            description: BenchmarkOperatorStatus defines the observed state of BenchmarkOperator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: benchmarks.cpe.cogadvisor.io
spec:
  group: cpe.cogadvisor.io
  names:
    kind: Benchmark
    listKind: BenchmarkList
    plural: benchmarks
    singular: benchmark
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Benchmark is the Schema for the benchmarks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BenchmarkSpec defines the desired state of Benchmark
            properties:
              benchmarkOperator:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              benchmarkSpec:
                type: string
              interval:
                type: integer
              iterationSpec:
                properties:
                  configurations:
                    items:
                      description: Iteration Definition
                      properties:
                        location:
                          type: string
                        name:
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  iterations:
                    items:
                      description: Iteration Definition
                      properties:
                        location:
                          type: string
                        name:
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  minimize:
                    type: boolean
                  nodeSelection:
                    properties:
                      location:
                        type: string
                      selector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      values:
                        items:
                          type: string
                        type: array
                    required:
                    - location
                    - values
                    type: object
                  sequential:
                    type: boolean
                type: object
              parserKey:
                type: string
              repetition:
                type: integer
              sidecar:
                type: boolean
              trackBuildConfigs:
                items:
                  description: BuildConfig Definition
                  properties:
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - benchmarkOperator
            - benchmarkSpec
            type: object
          status:
            description: BenchmarkStatus defines the observed state of Benchmark
            properties:
              bestResults:
                items:
                  properties:
                    build:
                      type: string
                    configurations:
                      additionalProperties:
                        type: string
                      type: object
                    performanceKey:
                      type: string
                    performanceValue:
                      type: string
                    scenarioID:
                      type: string
                  required:
                  - build
                  - configurations
                  - performanceKey
                  - performanceValue
                  - scenarioID
                  type: object
                type: array
              builds:
                items:
                  type: string
                type: array
              hash:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: BemchmarkIterationHash
                  properties:
                    build:
                      type: string
                    hash:
                      type: string
                    iterations:
                      additionalProperties:
                        type: string
                      type: object
                    run:
                      type: string
                  required:
                  - build
                  - hash
                  - iterations
                  - run
                  type: object
                type: array
              jobCompleted:
                type: string
              results:
                items:
                  description: BenchmarkPerformanceResult
                  properties:
                    build:
                      type: string
                    configID:
                      type: string
                    configurations:
                      additionalProperties:
                        type: string
                      type: object
                    repetitions:
                      items:
                        properties:
                          job:
                            type: string
                          parseResult:
                            type: string
                          performanceKey:
                            type: string
                          performanceValue:
                            type: string
                          pod:
                            type: string
                          pushedTime:
                            type: string
                          run:
                            type: string
                        required:
                        - job
                        - parseResult
                        - performanceKey
                        - performanceValue
                        - pod
                        - pushedTime
                        - run
                        type: object
                      type: array
                    scenarioID:
                      type: string
                    scenarios:
                      additionalProperties:
                        type: string
                      type: object
                  required:
                  - build
                  - configID
                  - configurations
                  - repetitions
                  - scenarioID
                  - scenarios
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpe-operator-controller-manager
  namespace: cpe-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cpe-operator-leader-election-role
  namespace: cpe-operator-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
  name: cpe-operator-prometheus-k8s
  namespace: cpe-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cpe-operator-extend-cluster-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - deployments/finalizers
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  - configmaps
  - daemonsets
  - endpoints
  - events
  - persistentvolumeclaims
  - pods
  - nodes
  - pods/log
  - secrets
  - services
  - virtualmachineinstances
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - '*'
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  - poddisruptionbudgets
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - '*'
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachineinstances
  - virtualmachines
  - virtualmachineinstancepresets
  - virtualmachineinstancereplicasets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - '*'
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - hyperfoil.io
  resources:
  - hyperfoils
  verbs:
  - '*'
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cpe-operator-manager-role
rules:
- apiGroups:
  - cpe.cogadvisor.io
  resources:
  - benchmarkoperators
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cpe.cogadvisor.io
  resources:
  - benchmarkoperators/finalizers
  verbs:
  - update
- apiGroups:
  - cpe.cogadvisor.io
  resources:
  - benchmarkoperators/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cpe.cogadvisor.io
  resources:
  - benchmarks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cpe.cogadvisor.io
  resources:
  - benchmarks/finalizers
  verbs:
  - update
- apiGroups:
  - cpe.cogadvisor.io
  resources:
  - benchmarks/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cpe-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cpe-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cpe-operator-leader-election-rolebinding
  namespace: cpe-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cpe-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: cpe-operator-controller-manager
  namespace: cpe-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
  name: cpe-operator-prometheus-k8s
  namespace: cpe-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cpe-operator-prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cpe-operator-extend-cluster-roleb-inding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpe-operator-extend-cluster-role
subjects:
- kind: ServiceAccount
  name: cpe-operator-controller-manager
  namespace: cpe-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cpe-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpe-operator-manager-role
subjects:
- kind: ServiceAccount
  name: cpe-operator-controller-manager
  namespace: cpe-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
  name: cpe-operator-prometheus-k8s
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cpe-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpe-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: cpe-operator-controller-manager
  namespace: cpe-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 6fcf615e.cogadvisor.io
kind: ConfigMap
metadata:
  name: cpe-operator-manager-config
  namespace: cpe-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: cpe-operator-controller-manager-metrics-service
  namespace: cpe-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: cpe-operator-cpe-parser
  namespace: cpe-operator-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: cpe-parser
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: cpe-operator-controller-manager
  namespace: cpe-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: CLUSTER_ID
          value: default
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PARSER_SERVICE
          value: http://cpe-operator-cpe-parser.$(OPERATOR_NAMESPACE)
        image: ghcr.io/ibm/cpe-operator/controller:v1.0.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cpe-operator-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: cpe-operator-cpe-parser
  namespace: cpe-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpe-parser
  template:
    metadata:
      labels:
        app: cpe-parser
    spec:
      containers:
      - image: ghcr.io/ibm/cpe-operator/parser:v1.0.0
        imagePullPolicy: Always
        name: cpe-parser
        ports:
        - containerPort: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: controller-manager
  name: cpe-operator-controller-manager-metrics-monitor
  namespace: cpe-operator-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager
