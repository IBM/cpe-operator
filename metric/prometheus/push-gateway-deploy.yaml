apiVersion: apps/v1
kind: Deployment
metadata:
  name: push-gateway
  namespace: cpe-monitoring-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: push-gateway
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: push-gateway
    spec:
      containers:
      - command:
        - pushgateway
        image: registry.au-syd.bluemix.net/armada-master/ocp-roks-metrics-server:v4.6.0-20210630
        imagePullPolicy: Always
        name: push-gateway
        ports:
        - containerPort: 9091
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - sidecar
        - --prometheus.url=http://localhost:9091/
        - --tsdb.path=/prometheus
        - --grpc-address=[$(POD_IP)]:10901
        - --http-address=127.0.0.1:10902
        - --objstore.config=$(OBJSTORE_CONFIG)
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: cos-config.yaml
              name: thanos-objectstorage
        image: quay.io/thanos/thanos:v0.19.0
        imagePullPolicy: IfNotPresent
        name: thanos-sidecar
        ports:
        - containerPort: 10902
          name: http
          protocol: TCP
        - containerPort: 10901
          name: grpc
          protocol: TCP
        resources:
          requests:
            cpu: 1m
        securityContext:
          capabilities:
            drop:
            - KILL
            - MKNOD
            - SETGID
            - SETUID
          runAsUser: 1000740000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /prometheus
          name: prometheus-cpe-prometheus-db
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: prometheus-k8s-token-gvlhn
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: multi-az-worker
        operator: Equal
        value: "true"
      volumes:
      - emptyDir: {}
        name: prometheus-cpe-prometheus-db
      - name: prometheus-k8s-token-gvlhn
        secret:
          defaultMode: 420
          secretName: prometheus-k8s-token-gvlhn

